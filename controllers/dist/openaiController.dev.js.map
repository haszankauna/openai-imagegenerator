{"version":3,"sources":["openaiController.js"],"names":["require","Configuration","OpenAIApi","configuration","apiKey","process","env","OPENAI_API_KEY","openai","generateImage","req","res","body","prompt","size","imageSize","createImage","n","response","imageUrl","data","url","status","json","success","console","log","message","error","module","exports"],"mappings":";;eAAqCA,OAAO,CAAC,QAAD,C;IAApCC,a,YAAAA,a;IAAeC,S,YAAAA,S;;AAEvB,IAAMC,aAAa,GAAG,IAAIF,aAAJ,CAAkB;AACtCG,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADkB,CAAlB,CAAtB;AAGA,IAAMC,MAAM,GAAG,IAAIN,SAAJ,CAAcC,aAAd,CAAf;;AAEA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACKD,GAAG,CAACE,IADT,EACZC,MADY,aACZA,MADY,EACJC,IADI,aACJA,IADI;AAGdC,UAAAA,SAHc,GAIlBD,IAAI,KAAK,OAAT,GAAmB,SAAnB,GAA+BA,IAAI,KAAK,QAAT,GAAoB,SAApB,GAAgC,WAJ7C;AAAA;AAAA;AAAA,0CAOKN,MAAM,CAACQ,WAAP,CAAmB;AACxCH,YAAAA,MAAM,EAANA,MADwC;AAExCI,YAAAA,CAAC,EAAE,CAFqC;AAGxCH,YAAAA,IAAI,EAAEC;AAHkC,WAAnB,CAPL;;AAAA;AAOZG,UAAAA,QAPY;AAaZC,UAAAA,QAbY,GAaDD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBC,GAbrB;AAelBV,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,YAAAA,OAAO,EAAE,IADU;AAEnBJ,YAAAA,IAAI,EAAED;AAFa,WAArB;AAfkB;AAAA;;AAAA;AAAA;AAAA;;AAoBlB,cAAI,YAAMD,QAAV,EAAoB;AAClBO,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMR,QAAN,CAAeI,MAA3B;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMR,QAAN,CAAeE,IAA3B;AACD,WAHD,MAGO;AACLK,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB;AACD;;AAEDhB,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,YAAAA,OAAO,EAAE,KADU;AAEnBI,YAAAA,KAAK,EAAE;AAFY,WAArB;;AA3BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAkCAC,MAAM,CAACC,OAAP,GAAiB;AAAErB,EAAAA,aAAa,EAAbA;AAAF,CAAjB","sourcesContent":["const { Configuration, OpenAIApi } = require('openai');\n\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\nconst generateImage = async (req, res) => {\n  const { prompt, size } = req.body;\n\n  const imageSize =\n    size === 'small' ? '256x256' : size === 'medium' ? '512x512' : '1024x1024';\n\n  try {\n    const response = await openai.createImage({\n      prompt,\n      n: 1,\n      size: imageSize,\n    });\n\n    const imageUrl = response.data.data[0].url;\n\n    res.status(200).json({\n      success: true,\n      data: imageUrl,\n    });\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.status);\n      console.log(error.response.data);\n    } else {\n      console.log(error.message);\n    }\n\n    res.status(400).json({\n      success: false,\n      error: 'The image could not be generated',\n    });\n  }\n};\n\nmodule.exports = { generateImage };"],"file":"openaiController.dev.js"}