{"version":3,"sources":["main.js"],"names":["onSubmit","e","preventDefault","textContent","document","querySelector","prompt","value","size","generateImageRequest","alert","response","data","imageUrl","regeneratorRuntime","async","_context","prev","next","showSpinner","awrap","fetch","method","headers","body","JSON","stringify","sent","ok","Error","json","src","removeSpinner","t0","stop","classList","add","remove","addEventListener"],"mappings":"aAAA,SAASA,SAASC,GACdA,EAAEC,iBAAAA,SAAAA,cAAF,QAAAC,YAAA,GAEAC,SAASC,cAAc,UAAQF,IAAAA,GAG/B,IAAMG,EAASF,SAASC,cAAc,WAAWE,MACvCC,EAAGJ,SAASC,cAAc,SAASE,MAE7C,KAAID,EAKJG,qBAAqBH,EAAQE,GAJ3BE,MAAM,wBAOV,SAAeD,qBAA6BD,EAA5CA,GAAA,IAAAG,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAE,cAAAH,EAAAE,KAAA,EAAAJ,mBAAAM,MAAAC,MAAA,wBAAA,CAAAC,OAAA,OAAAC,QAAA,CAEIJ,eAAW,oBAFfK,KAAAC,KAAAC,UAAA,CAKMJ,OAAAA,EACAC,KAAAA,OANN,KAAA,EAAA,IAAAZ,EAAAK,EAAAW,MAUcC,GAVd,CAAAZ,EAAAE,KAAA,EAAA,MAAA,MAWQV,gBAFI,IAAAqB,MAAA,qCATZ,KAAA,EAAA,OAAAb,EAAAE,KAAA,GAAAJ,mBAAAM,MAAAT,EAAAmB,QAAA,KAAA,GAAAlB,EAAAI,EAAAW,KAAAd,EAekBe,EAflBhB,KAAAR,SAAAC,cAAA,UAAA0B,IAAAlB,EA2BImB,gBA3BJhB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,MAAA,GAAAZ,SAAAC,cAiBsB,QAAAF,YAjBtBa,EAAAiB,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAjB,EAAAkB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAA,SAAAf,cAkCEf,SAASC,cAAc,YAAY8B,UAAUC,IAAI,QAb/C,SAAAJ,gBAEMnB,SAAAA,cAAgBD,YAvB1BuB,UAAAE,OAAA,QAAAjC,SAAAC,cAAA,eAAAiC,iBAAA,SAAAtC","file":"main.min.js","sourcesContent":["function onSubmit(e) {\n    e.preventDefault();\n  \n    document.querySelector('.msg').textContent = '';\n    document.querySelector('#image').src = '';\n  \n    const prompt = document.querySelector('#prompt').value;\n    const size = document.querySelector('#size').value;\n  \n    if (prompt === '') {\n      alert('Please add some text');\n      return;\n    }\n  \n    generateImageRequest(prompt, size);\n  }\n  \n  async function generateImageRequest(prompt, size) {\n    try {\n      showSpinner();\n  \n      const response = await fetch('/openai/generateimage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt,\n          size,\n        }),\n      });\n  \n      if (!response.ok) {\n        removeSpinner();\n        throw new Error('That image could not be generated');\n      }\n  \n      const data = await response.json();\n      // console.log(data);\n  \n      const imageUrl = data.data;\n  \n      document.querySelector('#image').src = imageUrl;\n  \n      removeSpinner();\n    } catch (error) {\n      document.querySelector('.msg').textContent = error;\n    }\n  }\n  \n  function showSpinner() {\n    document.querySelector('.spinner').classList.add('show');\n  }\n  \n  function removeSpinner() {\n    document.querySelector('.spinner').classList.remove('show');\n  }\n  \n  document.querySelector('#image-form').addEventListener('submit', onSubmit);"]}